<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.create.mapper.CreWorkMapper">
    
    <resultMap type="CreWork" id="CreWorkResult">
        <result property="workStoryId"    column="work_story_id"    />
        <result property="workStoryName"    column="work_story_name"    />
        <result property="workStoryEnName"    column="work_story_en_name"    />
        <result property="workStoryInfo"    column="work_story_info"    />
        <result property="workStoryAuthor"    column="work_story_author"    />
    </resultMap>

    <sql id="selectCreWorkVo">
        select work_story_id, work_story_name, work_story_en_name, work_story_info, work_story_author from cre_work
    </sql>

    <select id="selectCreWorkList" parameterType="CreWork" resultMap="CreWorkResult">
        <include refid="selectCreWorkVo"/>
        <where>  
            <if test="workStoryName != null  and workStoryName != ''"> and work_story_name like concat('%', #{workStoryName}, '%')</if>
        </where>
    </select>
    
    <select id="selectCreWorkById" parameterType="Long" resultMap="CreWorkResult">
        <include refid="selectCreWorkVo"/>
        where work_story_id = #{workStoryId}
    </select>
        
    <insert id="insertCreWork" parameterType="CreWork" useGeneratedKeys="true" keyProperty="workStoryId">
        insert into cre_work
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="workStoryName != null">work_story_name,</if>
            <if test="workStoryEnName != null">work_story_en_name,</if>
            <if test="workStoryInfo != null">work_story_info,</if>
            <if test="workStoryAuthor != null">work_story_author,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="workStoryName != null">#{workStoryName},</if>
            <if test="workStoryEnName != null">#{workStoryEnName},</if>
            <if test="workStoryInfo != null">#{workStoryInfo},</if>
            <if test="workStoryAuthor != null">#{workStoryAuthor},</if>
         </trim>
    </insert>

    <update id="updateCreWork" parameterType="CreWork">
        update cre_work
        <trim prefix="SET" suffixOverrides=",">
            <if test="workStoryName != null">work_story_name = #{workStoryName},</if>
            <if test="workStoryEnName != null">work_story_en_name = #{workStoryEnName},</if>
            <if test="workStoryInfo != null">work_story_info = #{workStoryInfo},</if>
            <if test="workStoryAuthor != null">work_story_author = #{workStoryAuthor},</if>
        </trim>
        where work_story_id = #{workStoryId}
    </update>

    <delete id="deleteCreWorkById" parameterType="Long">
        delete from cre_work where work_story_id = #{workStoryId}
    </delete>

    <delete id="deleteCreWorkByIds" parameterType="String">
        delete from cre_work where work_story_id in 
        <foreach item="workStoryId" collection="array" open="(" separator="," close=")">
            #{workStoryId}
        </foreach>
    </delete>
    
</mapper>